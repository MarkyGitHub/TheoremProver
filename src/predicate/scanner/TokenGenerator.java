package predicate.scanner;

import java.util.ArrayList;
import predicate.common.Token;

/* <p>Title:Predicate Logic Theorem Prover</p>
 * <p>Description: A theorem prover for propositional logic.</p>
 * <p>Copyright: Copyright (c) 2005</p>
 * <p>Department: Computer Science</p>
 * @author Mark Schlichtmann
 * @version 1.0*/
/*******************************************************************************
 * The TokenGenerator class is used to create a sequence of tokens during
 * scanning of input String data.
 ******************************************************************************/
public class TokenGenerator {
    /** Is an ArrayList that holds the tokens */
    private ArrayList tokens;

    /** Initialisation of private data members */
    public TokenGenerator() {
        tokens = new ArrayList();
    }

    /**
     * This method is used to create a new token whenever called
     * 
     * @param data
     *            String is the data value of the token
     * @param type
     *            int is the precedence of the token
     */
    public void makeToken(String data, int type) {
        this.tokens.add(new Token(data, type));
    }

    /**
     * This method returns the tokens generated by this class in an ArrayList.
     * 
     * @return ArrayList is the tokens generated by this class; will return null
     *         if ArrayList size is zero
     */
    public ArrayList getTokens() {
        if (tokens.size() == 0) {
            return null;
        } else {
            return tokens;
        }
    }

    /**
     * This method can be used to clear the tokens
     */
    public void clearTokens() {
        tokens = new ArrayList();
    }
}
